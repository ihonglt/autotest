##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

upstream wss {
#        server 127.0.0.1:8000 weight=1 max_fails=2;
	server unix:/run/php7.0-swoole.sock weight=1 max_fails=2;
	keepalive 100;
}

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /usr/local/www;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html server.php;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		if (!-e $request_filename)
                {
                        rewrite ^(.*)$ $1.php last;
                }
		try_files $uri $uri/ =404;
		allow 192.168.0.0/16;
		deny all;
	}

	location /dsmp/ {
                if (!-e $request_filename) {
                        rewrite ^(/dsmp/schemas/saygameover.ashx)$ /dsmp/schemas/GameResult.php last;
                        rewrite ^(.*)$ $1.php last;
                }
        }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	
		# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
		# With php7.0-fpm:
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

#server {
#        listen 8080;
#        server_name localhost;
#
##       root html;
##       index index.html index.htm;
##
#        location / {
##               try_files $uri $uri/ =404;
#                proxy_pass http://wss;
#                proxy_http_version 1.1;
#                proxy_set_header Upgrade $http_upgrade;
#                proxy_set_header Connection "upgrade";
#                proxy_set_header X-real-ip $remote_addr;
#                proxy_set_header X-Forwarded-For $remote_addr;
#                proxy_set_header Host $host:8000;
#        }
#}

server {
        listen 443;
        listen 8443;
        server_name fhabc.com localhost;

        ssl on;
        ssl_certificate /etc/nginx/ssl/_.fhabc.com_bundle.crt;
        ssl_certificate_key /etc/nginx/ssl/_.fhabc.com.key;

        ssl_session_timeout 5m;

        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_prefer_server_ciphers on;

        location / {
#               try_files $uri $uri/ =404;
                #proxy_pass http://wss;
                proxy_pass http://wss;
		proxy_http_version 1.1;
#		proxy_connect_timeout 4s;
#		proxy_read_timeout 600s;
#		proxy_send_timeout 12s;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header X-real-ip $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host:8000;
	}
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
